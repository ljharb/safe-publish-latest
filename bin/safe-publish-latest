#!/usr/bin/env node

'use strict';

const options = require('yargs')
	.boolean('force-in-publish')
	.default('force-in-publish', false)
	.describe('force-in-publish', 'force "in publish" check to pass')
	.help()
	.version().alias('version', 'v')
	.strict()
	.wrap(null)
	.argv;

const inPub = require('in-publish');
const inPublish = options['force-in-publish'] || inPub.inPublish();
const inInstall = inPub.inInstall();

if (!inInstall && !inPublish) {
	console.warn('Detected non-install and non-publish: exiting.');
}
if (!inPublish) {
	process.exit(0);
}

const path = require('path');

const { name, version } = require(path.join(process.cwd(), 'package.json'));
if (!name) {
	console.error('Error: package name is required');
	process.exit(1);
}

const semver = require('semver');
const getLatestError = require('../getLatestError');

if (semver.valid(version)) {
	getLatestError(name, version).then((messages) => {
		console.log([].concat(messages, 'Publish away!').join('\n'));
		process.exit(0);
	}).catch((errors) => {
		console.error([].concat(errors).join('\n'));
		process.exitCode = 3;
	});
} else {
	console.error(`Error: package version "${version}" is invalid.`);
	process.exitCode = 2;
}
